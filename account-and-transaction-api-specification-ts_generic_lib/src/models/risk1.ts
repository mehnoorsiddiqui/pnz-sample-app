/**
 * Account and Transaction API SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { lazy, object, optional, Schema, string } from '../schema';
import { DeliveryAddress2, deliveryAddress2Schema } from './deliveryAddress2';
import { GeoLocation2, geoLocation2Schema } from './geoLocation2';
import {
  PaymentContextCodeEnum,
  paymentContextCodeEnumSchema,
} from './paymentContextCodeEnum';

export interface Risk1 {
  geoLocation?: GeoLocation2;
  /** Specifies the payment context */
  paymentContextCode?: PaymentContextCodeEnum;
  /** Category code conforms to ISO 18245, related to the type of services or goods the merchant provides for the transaction */
  merchantCategoryCode?: string;
  /** The unique customer identifier of the Customer with the merchant. */
  merchantCustomerIdentification?: string;
  deliveryAddress?: DeliveryAddress2;
  /** Name of the end user facing application */
  endUserAppName?: string;
  /** Version of the end user facing application */
  endUserAppVersion?: string;
  /** Name of the merchant */
  merchantName?: string;
  /** NZ business number for the merchant */
  merchantNZBN?: string;
}

export const risk1Schema: Schema<Risk1> = object({
  geoLocation: ['GeoLocation', optional(lazy(() => geoLocation2Schema))],
  paymentContextCode: [
    'PaymentContextCode',
    optional(paymentContextCodeEnumSchema),
  ],
  merchantCategoryCode: ['MerchantCategoryCode', optional(string())],
  merchantCustomerIdentification: [
    'MerchantCustomerIdentification',
    optional(string()),
  ],
  deliveryAddress: [
    'DeliveryAddress',
    optional(lazy(() => deliveryAddress2Schema)),
  ],
  endUserAppName: ['EndUserAppName', optional(string())],
  endUserAppVersion: ['EndUserAppVersion', optional(string())],
  merchantName: ['MerchantName', optional(string())],
  merchantNZBN: ['MerchantNZBN', optional(string())],
});
