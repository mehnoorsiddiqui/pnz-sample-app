/**
 * Account and Transaction API SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { lazy, object, optional, Schema, string } from '../schema';
import { CreditorAccount2, creditorAccount2Schema } from './creditorAccount2';
import { CreditorAgent12, creditorAgent12Schema } from './creditorAgent12';
import { Reference, referenceSchema } from './reference';

export interface BeneficiaryModel {
  /** A unique and immutable identifier used to identify the account resource. This identifier has no meaning to the account owner. */
  accountId: string;
  /** A unique and immutable identifier used to identify the beneficiary resource. This identifier has no meaning to the account owner. */
  beneficiaryId?: string;
  reference?: Reference;
  creditorAgent?: CreditorAgent12;
  creditorAccount?: CreditorAccount2;
}

export const beneficiaryModelSchema: Schema<BeneficiaryModel> = object({
  accountId: ['AccountId', string()],
  beneficiaryId: ['BeneficiaryId', optional(string())],
  reference: ['Reference', optional(lazy(() => referenceSchema))],
  creditorAgent: ['CreditorAgent', optional(lazy(() => creditorAgent12Schema))],
  creditorAccount: [
    'CreditorAccount',
    optional(lazy(() => creditorAccount2Schema)),
  ],
});
