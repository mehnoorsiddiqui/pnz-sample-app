/**
 * Account and Transaction API SpecificationLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { lazy, object, optional, Schema, string } from '../schema';
import { PostalAddress2, postalAddress2Schema } from './postalAddress2';
import { SchemeNameEnum, schemeNameEnumSchema } from './schemeNameEnum';

/**
 * Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account.
 * This is the servicer of the beneficiary account.
 */
export interface CreditorAgent1 {
  /** Name of the identification scheme, in a coded form as published in an external list. */
  schemeName?: SchemeNameEnum;
  /** Unique and unambiguous identification of the servicing institution. */
  identification?: string;
  /** Name by which an agent is known and which is usually used to identify that agent. */
  name?: string;
  postalAddress?: PostalAddress2;
}

export const creditorAgent1Schema: Schema<CreditorAgent1> = object({
  schemeName: ['SchemeName', optional(schemeNameEnumSchema)],
  identification: ['Identification', optional(string())],
  name: ['Name', optional(string())],
  postalAddress: ['PostalAddress', optional(lazy(() => postalAddress2Schema))],
});
